# -*- coding: utf-8 -*-
"""PUTOYAHIRMONO.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LjyySiWisM_zARQIso2MmxZ1fENpVJD_
"""

import pandas as pd
df_attendance = pd.read_csv("attendance.csv")
df_groups = pd.read_csv("STUDENT_GROUP.csv")

df_attendance.tail(3)

df_attendance.head(3)

df_groups.dtypes

df_attendance.dtypes

df_attendance.rename(columns={'STUDENT_ID': 'student_id'}, inplace=True)

df_attendance['student_id'] = pd.to_numeric(df_attendance['student_id'], errors='coerce')

df_attendance.dropna(subset=['student_id'], inplace=True)

df_attendance['student_id'] = df_attendance['student_id'].astype(int)

df_attendance.describe()

merged_df = pd.merge(df_attendance, df_groups, on='student_id', how='inner')
filtered_df = merged_df[merged_df['student_id'].notna()]
filtered_df

filtered_df['DT'] = pd.to_datetime(filtered_df['DT'])
filtered_df['año'] = filtered_df['DT'].dt.year
filtered_df_año = filtered_df[filtered_df['año'] == 2025]

filtered_df_año

grouped_df = filtered_df_año.groupby('group_id')
grupo = grouped_df.get_group('20251ST48A')
grupo

estudiantes_grupo = grupo['student_id'].unique()
asistencias_por_dia = grupo.groupby('DT')['student_id'].nunique().reset_index()
asistencias_por_dia['faltas'] = len(estudiantes_grupo) - asistencias_por_dia['student_id']
asistencias_por_dia.rename(columns={'student_id': 'asistencias'}, inplace=True)
asistencias_por_dia

dias_semana = ['Monday', 'Tuesday', 'Wednesday']  # Asegúrate de que los nombres de los días coincidan con tu DataFrame
asistencias_dias_semana = grupo[grupo['DT'].dt.day_name().isin(dias_semana)] # Filter the original group dataframe

# Create the pivot table using the filtered group dataframe
tabla_dinamica = pd.pivot_table(
    asistencias_dias_semana,
    values='0',  # Assuming 'PRESENCE' indicates attendance (1/0)
    index='student_id',
    columns='DT',
    aggfunc='sum',  # Sum the presence values to get total attendance per student per day
    fill_value=0
)
# Calculate the correlation
correlacion = tabla_dinamica.corr()

